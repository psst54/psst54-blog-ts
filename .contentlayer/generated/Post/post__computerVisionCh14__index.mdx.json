{
  "title": "Ch14. Deep Neural Networks",
  "published_at": "2022-12-20T13:24:54.000Z",
  "last_modified_at": "2022-12-20T13:24:54.000Z",
  "category": [
    "2022Fall",
    "ComputerVision"
  ],
  "tag": [],
  "summary": "before NN and DNN, CNN",
  "body": {
    "raw": "\r\n# Challenges of Image Classification\r\n\r\n- Viewpoint variation\r\n- Illumination\r\n- Deformation\r\n- Occlusion\r\n- Background Clutter\r\n\r\nObject detection/ Semantic segmentation/ Instance segmentation\r\n\r\n# Before Neural Nets, Classical Approach\r\n\r\n## Template-based Approach\r\n\r\n- Find a sub-image of the target image that matches a “template” image\r\n- Straightforward result, we know what we are looking for\r\n\r\n## Feature-based Approach\r\n\r\n- Find strong, representative features on images, like edges or corners\r\n- How to classify the result? Let a classifier “learn” the obtained features\r\n\r\n## Data-driven approach\r\n\r\nUse Machine Learning to train a classifier\r\n\r\nUse a feature descriptor combined with a classifier\r\n\r\n- **Feature descriptor** is a representation of useful information on an image\r\n  - Points, edges, curves, color ...\r\n  ### Histogram of Oriented Gradients (HOG)\r\n  - Characterizes object appearance and shape\r\n  - Gradient : Changes in pixel intensity across an image\r\n  - Image is divided into small connected regions called cells, calculate gradient for the pixels within each cell\r\n  - Normalization of histogram : group adjacent cells into regions called blocks, for invariance in illumination and shadowing\r\n  - Famous application : Histograms of Oriented Gradients for Human Detection\r\n    ![Untitled](/post/computerVisionCh14/Untitled.png)\r\n    - b : each pixel shows the maximu, positive SVM weight in the block centred on the pixel\r\n    - c : likewise for the negative SVM weights\r\n    - e : computed R(rectengular)-HOG descriptor\r\n    - f, g : the R-HOG descriptor weighted by respectively the positive and the negative SVM weights\r\n- **Classifier** is a method for determining class of unknown object\r\n  - Nearest Neighbours, K-Nearest Neighbours, Support Vector Machine (SVM) ..\r\n  ### Nearest Neighbour\r\n  - Simple training, just memorize all data and labels\r\n  - Compare images using Distance metric\r\n  ### K-Nearest Neighbour\r\n  - Consider majority vote from the K closest points\r\n  - Compare images using distance metric\r\n    ![Untitled](/post/computerVisionCh14/Untitled1.png)\r\n  ### Support Vector Machine (SVM)\r\n  - Suppose we have points in an n-dimensional space and class labels attached to those points. SVM will divide the space such that different classes ends on different sides of the plane\r\n  - Two types : linear and non-linear\r\n    ![Untitled](/post/computerVisionCh14/Untitled2.png)\r\n\r\n# Neural Network (NN)\r\n\r\n![Untitled](/post/computerVisionCh14/Untitled3.png)\r\n\r\n## Different options for Activation functions\r\n\r\n![Untitled](/post/computerVisionCh14/Untitled4.png)\r\n\r\nSigmoid / tanh → problem of vanishing gradient\r\n\r\nReLU : adventageous when back propagation\r\n\r\n# Deep Neural Network (DNN)\r\n\r\n- Shallow Neural Newrorks : 1 hidden layer\r\n- Deep Neural Networks : more than 2 hidden layer\r\n\r\n# Convolutional Neural Network (CNN)\r\n\r\n- **Local connectivity**\r\n- **Weight sharing**\r\n\r\n## Convolutional Layers\r\n\r\n- Slide over the image computing dot products with a filter/weight (represent features)\r\n- Produces a feature map\r\n\r\n## ReLU Layers\r\n\r\nAllows CNN to account for non-linear relationships\r\n\r\nCan use other activation functions\r\n\r\n- ReLU generally works better in practice\r\n- Sigmoid not recommended\r\n\r\n## Pooling Layers\r\n\r\n- Translational Invariance\r\n  ⇒ Output remains the same even if feature is moved a little\r\n- Reduce the size of feature map\r\n- Different ways to implement\r\n  - Max Pooling\r\n  - Average Pooling\r\n  - Min Pooling\r\n  - …\r\n\r\n## Fully-Connected Layers\r\n\r\n- Final layer\r\n- Returns probability of class for the objects in image\r\n",
    "code": "var Component=(()=>{var d=Object.create;var t=Object.defineProperty;var u=Object.getOwnPropertyDescriptor;var p=Object.getOwnPropertyNames;var g=Object.getPrototypeOf,m=Object.prototype.hasOwnProperty;var f=(i,e)=>()=>(e||i((e={exports:{}}).exports,e),e.exports),N=(i,e)=>{for(var l in e)t(i,l,{get:e[l],enumerable:!0})},o=(i,e,l,a)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let r of p(e))!m.call(i,r)&&r!==l&&t(i,r,{get:()=>e[r],enumerable:!(a=u(e,r))||a.enumerable});return i};var w=(i,e,l)=>(l=i!=null?d(g(i)):{},o(e||!i||!i.__esModule?t(l,\"default\",{value:i,enumerable:!0}):l,i)),b=i=>o(t({},\"__esModule\",{value:!0}),i);var h=f((x,c)=>{c.exports=_jsx_runtime});var k={};N(k,{default:()=>y,frontmatter:()=>v});var n=w(h()),v={title:\"Ch14. Deep Neural Networks\",category:[\"2022Fall\",\"ComputerVision\"],tag:[],published_at:new Date(1671542694e3),last_modified_at:new Date(1671542694e3),summary:\"before NN and DNN, CNN\"};function s(i){let e=Object.assign({h1:\"h1\",ul:\"ul\",li:\"li\",p:\"p\",h2:\"h2\",strong:\"strong\",h3:\"h3\",img:\"img\"},i.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.h1,{children:\"Challenges of Image Classification\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:\"Viewpoint variation\"}),`\n`,(0,n.jsx)(e.li,{children:\"Illumination\"}),`\n`,(0,n.jsx)(e.li,{children:\"Deformation\"}),`\n`,(0,n.jsx)(e.li,{children:\"Occlusion\"}),`\n`,(0,n.jsx)(e.li,{children:\"Background Clutter\"}),`\n`]}),`\n`,(0,n.jsx)(e.p,{children:\"Object detection/ Semantic segmentation/ Instance segmentation\"}),`\n`,(0,n.jsx)(e.h1,{children:\"Before Neural Nets, Classical Approach\"}),`\n`,(0,n.jsx)(e.h2,{children:\"Template-based Approach\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:\"Find a sub-image of the target image that matches a \\u201Ctemplate\\u201D image\"}),`\n`,(0,n.jsx)(e.li,{children:\"Straightforward result, we know what we are looking for\"}),`\n`]}),`\n`,(0,n.jsx)(e.h2,{children:\"Feature-based Approach\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:\"Find strong, representative features on images, like edges or corners\"}),`\n`,(0,n.jsx)(e.li,{children:\"How to classify the result? Let a classifier \\u201Clearn\\u201D the obtained features\"}),`\n`]}),`\n`,(0,n.jsx)(e.h2,{children:\"Data-driven approach\"}),`\n`,(0,n.jsx)(e.p,{children:\"Use Machine Learning to train a classifier\"}),`\n`,(0,n.jsx)(e.p,{children:\"Use a feature descriptor combined with a classifier\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"Feature descriptor\"}),\" is a representation of useful information on an image\",`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:\"Points, edges, curves, color ...\"}),`\n`]}),`\n`,(0,n.jsx)(e.h3,{children:\"Histogram of Oriented Gradients (HOG)\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:\"Characterizes object appearance and shape\"}),`\n`,(0,n.jsx)(e.li,{children:\"Gradient : Changes in pixel intensity across an image\"}),`\n`,(0,n.jsx)(e.li,{children:\"Image is divided into small connected regions called cells, calculate gradient for the pixels within each cell\"}),`\n`,(0,n.jsx)(e.li,{children:\"Normalization of histogram : group adjacent cells into regions called blocks, for invariance in illumination and shadowing\"}),`\n`,(0,n.jsxs)(e.li,{children:[`Famous application : Histograms of Oriented Gradients for Human Detection\\r\n`,(0,n.jsx)(e.img,{src:\"/post/computerVisionCh14/Untitled.png\",alt:\"Untitled\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:\"b : each pixel shows the maximu, positive SVM weight in the block centred on the pixel\"}),`\n`,(0,n.jsx)(e.li,{children:\"c : likewise for the negative SVM weights\"}),`\n`,(0,n.jsx)(e.li,{children:\"e : computed R(rectengular)-HOG descriptor\"}),`\n`,(0,n.jsx)(e.li,{children:\"f, g : the R-HOG descriptor weighted by respectively the positive and the negative SVM weights\"}),`\n`]}),`\n`]}),`\n`]}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"Classifier\"}),\" is a method for determining class of unknown object\",`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:\"Nearest Neighbours, K-Nearest Neighbours, Support Vector Machine (SVM) ..\"}),`\n`]}),`\n`,(0,n.jsx)(e.h3,{children:\"Nearest Neighbour\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:\"Simple training, just memorize all data and labels\"}),`\n`,(0,n.jsx)(e.li,{children:\"Compare images using Distance metric\"}),`\n`]}),`\n`,(0,n.jsx)(e.h3,{children:\"K-Nearest Neighbour\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:\"Consider majority vote from the K closest points\"}),`\n`,(0,n.jsxs)(e.li,{children:[`Compare images using distance metric\\r\n`,(0,n.jsx)(e.img,{src:\"/post/computerVisionCh14/Untitled1.png\",alt:\"Untitled\"})]}),`\n`]}),`\n`,(0,n.jsx)(e.h3,{children:\"Support Vector Machine (SVM)\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:\"Suppose we have points in an n-dimensional space and class labels attached to those points. SVM will divide the space such that different classes ends on different sides of the plane\"}),`\n`,(0,n.jsxs)(e.li,{children:[`Two types : linear and non-linear\\r\n`,(0,n.jsx)(e.img,{src:\"/post/computerVisionCh14/Untitled2.png\",alt:\"Untitled\"})]}),`\n`]}),`\n`]}),`\n`]}),`\n`,(0,n.jsx)(e.h1,{children:\"Neural Network (NN)\"}),`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.img,{src:\"/post/computerVisionCh14/Untitled3.png\",alt:\"Untitled\"})}),`\n`,(0,n.jsx)(e.h2,{children:\"Different options for Activation functions\"}),`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.img,{src:\"/post/computerVisionCh14/Untitled4.png\",alt:\"Untitled\"})}),`\n`,(0,n.jsx)(e.p,{children:\"Sigmoid / tanh \\u2192 problem of vanishing gradient\"}),`\n`,(0,n.jsx)(e.p,{children:\"ReLU : adventageous when back propagation\"}),`\n`,(0,n.jsx)(e.h1,{children:\"Deep Neural Network (DNN)\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:\"Shallow Neural Newrorks : 1 hidden layer\"}),`\n`,(0,n.jsx)(e.li,{children:\"Deep Neural Networks : more than 2 hidden layer\"}),`\n`]}),`\n`,(0,n.jsx)(e.h1,{children:\"Convolutional Neural Network (CNN)\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.strong,{children:\"Local connectivity\"})}),`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.strong,{children:\"Weight sharing\"})}),`\n`]}),`\n`,(0,n.jsx)(e.h2,{children:\"Convolutional Layers\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:\"Slide over the image computing dot products with a filter/weight (represent features)\"}),`\n`,(0,n.jsx)(e.li,{children:\"Produces a feature map\"}),`\n`]}),`\n`,(0,n.jsx)(e.h2,{children:\"ReLU Layers\"}),`\n`,(0,n.jsx)(e.p,{children:\"Allows CNN to account for non-linear relationships\"}),`\n`,(0,n.jsx)(e.p,{children:\"Can use other activation functions\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:\"ReLU generally works better in practice\"}),`\n`,(0,n.jsx)(e.li,{children:\"Sigmoid not recommended\"}),`\n`]}),`\n`,(0,n.jsx)(e.h2,{children:\"Pooling Layers\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:`Translational Invariance\\r\n\\u21D2 Output remains the same even if feature is moved a little`}),`\n`,(0,n.jsx)(e.li,{children:\"Reduce the size of feature map\"}),`\n`,(0,n.jsxs)(e.li,{children:[\"Different ways to implement\",`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:\"Max Pooling\"}),`\n`,(0,n.jsx)(e.li,{children:\"Average Pooling\"}),`\n`,(0,n.jsx)(e.li,{children:\"Min Pooling\"}),`\n`,(0,n.jsx)(e.li,{children:\"\\u2026\"}),`\n`]}),`\n`]}),`\n`]}),`\n`,(0,n.jsx)(e.h2,{children:\"Fully-Connected Layers\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:\"Final layer\"}),`\n`,(0,n.jsx)(e.li,{children:\"Returns probability of class for the objects in image\"}),`\n`]})]})}function C(i={}){let{wrapper:e}=i.components||{};return e?(0,n.jsx)(e,Object.assign({},i,{children:(0,n.jsx)(s,i)})):s(i)}var y=C;return b(k);})();\n;return Component;"
  },
  "_id": "post/computerVisionCh14/index.mdx",
  "_raw": {
    "sourceFilePath": "post/computerVisionCh14/index.mdx",
    "sourceFileName": "index.mdx",
    "sourceFileDir": "post/computerVisionCh14",
    "contentType": "mdx",
    "flattenedPath": "post/computerVisionCh14"
  },
  "type": "Post",
  "fileName": "computerVisionCh14"
}